version: "3.9"

# Attention: child services will inherit settings from their parents. So if you set a network_mode: host in the base service, all child services will also use host networking. This is not always what you want. So be careful with this.
services:
  # Base image containing dependencies.
  base:
    image: ghcr.io/bjoernellens1/go1-ros-medlodic/go1:base
    build:
      context: .
      dockerfile: docker/Dockerfile
      tags:
        - ghcr.io/bjoernellens1/go1-ros-medlodic/go1:base
      args:
        ROS_DISTRO: "melodic"
        UNDERLAY_WS: "/go1_ws"
      target: base
      x-bake:
        platforms:
          - linux/arm64
          - linux/amd64
    # Interactive shell
    stdin_open: true
    tty: true
    # Networking and IPC for ROS
    network_mode: host
    ipc: host
    # Needed to display graphical applications
    environment:
      # Allows graphical programs in the container.
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all # this only works on nvidia gpus
    volumes:
      # Allows graphical programs in the container.
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
    restart: unless-stopped

  # Overlay image containing the project specific source code.
  overlay:
    extends: base
    image: ghcr.io/bjoernellens1/go1-ros-medlodic/go1:overlay
    build:
      context: .
      dockerfile: docker/Dockerfile
      tags:
        - ghcr.io/bjoernellens1/go1-ros-medlodic/go1:overlay
      target: overlay
      x-bake:
        platforms:
          - linux/arm64
          - linux/amd64
    volumes:
      - .:/repo
    command: >
      /bin/bash

  # Additional dependencies for GUI applications
  guis:
    extends: overlay
    image: ghcr.io/bjoernellens1/go1-ros-medlodic/go1:guis
    build:
      context: .
      dockerfile: docker/Dockerfile
      tags:
        - ghcr.io/bjoernellens1/go1-ros-medlodic/go1:guis
      target: guis
      x-bake:
        platforms:
          - linux/arm64
          - linux/amd64
    command: >
      /bin/bash
    devices:
      - /dev/dri:/dev/dri # needed for graphical applications with integrated intel or amd gpus

  ### Images for ROS1 Interactions
  #ROS1 Bridge
  ros1bridge:
    image: ghcr.io/bjoernellens1/ros2_rmp/ros1bridge
    command: >
      ros2 run ros1_bridge dynamic_bridge --bridge-all-2to1-topics
    build:
      context: .
      dockerfile: docker/Dockerfile
      tags:
        - ghcr.io/bjoernellens1/ros2_rmp/ros1bridge
      args:
        ROS_DISTRO: humble
      target: bridge
      x-bake:
        platforms:
          #- linux/arm64
          - linux/amd64
      # Networking and IPC for ROS 2
    network_mode: host
    ipc: host
    environment:
      - ROS_DOMAIN_ID=5
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_MASTER_URI=http://localhost:11311 # is configured to run roscore on the robot but could change to local ros1 machine here
  
  #ROS1 roscore
  roscore:
    command: >
      roscore
    extends: ros1bridge
    network_mode: host
    ipc: host
    environment:
      - ROS_DOMAIN_ID=5
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_MASTER_URI=http://localhost:11311 # is configured to run roscore on the robot but could change to local ros1 machine here